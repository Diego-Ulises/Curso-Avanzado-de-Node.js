Cómo implementar un custom EventEmitter usando ES6 classes
El agent va a ser el encargado de notificar al servidor cada una de las métricas que vamos a definir, y va a ser el módulo que vamos a utilizar para recibir la información, o para suscribirnos a los mensajes que están enviando todos los que están conectados a la aplicación.

Este módulo lo vamos a desarrollar como un EventEmitter. En esta clase vamos a aprender cómo crear uno personalizado, utilizando ES6.

El módulo de Node que nos permite crear EventEmitters está dentro del paquete events, que viene en el core de Node, así que no hay que instalar nada más. Para esto vamos a crear una clase que vamos a extender del EventEmitter, y luego la vamos a exportar. Cuando vayamos a utilizar el módulo podemos exportar esta clase. El constructor de la clase va a recibir opciones, que inicialmente vamos a obviar. Lo último será llamar al constructor de la clase de EventEmitter.
npm i standard --save-dev

Implementación del cliente MQTT
El agente se va a conectar al cliente MQTT para publicar métricas y para recibir información.

Reto #5:
¿Ves un patrón aquí? - El módulo de utilidades se re utiliza del proyecto platziverse-mqtt ¿Puedes volverlo un módulo standalone? ¿Cómo lo llamarías?

npm install mqtt debug defaults --save
npm install --save uuid

Según lo que entiendo, un agente es un sistema de computo que esta censando algo, por ejemplo, si tenemos un sistema IoT que controle las cosas del hogar lo mas común seria tener un sensor de gas, otro de agua, otro ponele en el patio que monitore la temperatura, etc… Bueno cada uno de estos modulos que censan cosas distintas vendrían a ser un agente distinto, la cuestión es que el modulo de “platziverse-agent” vendría a simular 1 modulo de esto, y si ejecuto este modulo “platziverse-agent” en varias terminales lo que estaría haciendo es simular X cantidad de módulos con distinta configuración de monitoreo y que todo esto se comunique con una especie de “servidor central” que funcionaria de “middleware” y que en este caso serían los modulos de platziverse-db junto a platziverse-mqtt